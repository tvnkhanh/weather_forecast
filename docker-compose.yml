version: '3.9'
services:
  mongodb:
    image: mongo:latest
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - '27017:27017'
    volumes:
      - node-mongo-data:/data/db

  user-service:
    depends_on:
      - mongodb
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "5001:5000"
    environment:
      - NODE_PORT=5000
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE_1
      - DB_PORT=$MONGODB_DOCKER_PORT

  weather-service:
    depends_on:
      - mongodb
    build: 
      context: ./weather-service
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "5002:5000"
    environment:
      - NODE_PORT=5000
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE_2
      - DB_PORT=$MONGODB_DOCKER_PORT

  location-service:
    depends_on:
      - mongodb
    build: 
      context: ./location-service
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "5003:5000"
    environment:
      - NODE_PORT=5000
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE_3
      - DB_PORT=$MONGODB_DOCKER_PORT

  weather-forecast-web:
    depends_on:
      - user-service
      - weather-service
    build: 
      context: ./weather-forecast-web
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"

  # weather-forecast-app:
  #   depends_on:
  #    - user-service
  #    - weather-service
  #   build: 
  #     context: ./weather_forecast_app
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports: 
  #     - "8080:8080"

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - user-service
      - weather-service
      - weather-forecast-web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  node-mongo-data:

      
